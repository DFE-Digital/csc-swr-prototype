var CACHE_VERSION = 'v1';
var CACHE_NAME = CACHE_VERSION + ':sw-cache-csc-swr-prototype';


self.addEventListener('install', function(event) {
  event.waitUntil(
    caches.open(CACHE_NAME).then(function(cache) {
      console.log('I am inside the cache')
      return cache.addAll(
        [
          "<%= asset_pack_path 'application.js' %>",
          "<%= asset_pack_path 'application.css' %>",
          "/offline.html"
        ]
      );
    })
  );
});

self.addEventListener('fetch', function(event) {
  event.respondWith(
    fetch(event.request).catch(function() {
      return caches.match(event.request);
    })
  );
});

// self.addEventListener('fetch', event => {
//   console.log('Fetch event for ', event.request.url);
//   event.respondWith(
//     caches.match(event.request)
//     .then(response => {
//       if (response) {
//         console.log('Found ', event.request.url, ' in cache');
//         return response;
//       }
//       console.log('Network request for ', event.request.url);
//       return fetch(event.request)

//       // TODO 4 - Add fetched files to the cache

//     }).catch(error => {

//       // TODO 6 - Respond with custom offline page

//     })
//   );
// });



// function onInstall(event) {
//   console.log('[Serviceworker]', "Installing!", event);
//   event.waitUntil(
//     caches.open(CACHE_NAME).then(function prefill(cache) {
//       console.log('I am inside the cache')
//       return cache.addAll([
//         // '<%= asset_pack_path 'application.js' %>',
//         // '<%= asset_pack_path 'application.css' %>',
//         '/offline.html'
//       ]);
//     })
//   );
// }

// self.addEventListener('install', onInstall);